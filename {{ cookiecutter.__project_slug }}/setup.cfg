[metadata]
name = {{ cookiecutter.package_slug }}
version = file: VERSION
description = {{ cookiecutter.short_description }}
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
# TODO @{{ cookiecutter.author_email }}: add project url here
{%- if cookiecutter.git_host == "GitHub" %}
# url = https://github.com/[username or org]/{{ cookiecutter.__project_slug }}.git
{%- elif cookiecutter.git_host == "GitLab" %}
# url = https://gitlab.com/[path]/{{ cookiecutter.__project_slug }}.git
{%- else %}
# url =
{%- endif %}
author = {{ cookiecutter.author_name }}
author_email = {{ cookiecutter.author_email }}
{%- if cookiecutter.license == "MIT" %}
license = MIT
{%- elif cookiecutter.license == "BSD-3" %}
license = BSD 3-Clause
{%- elif cookiecutter.license == "GNU GPL v3.0" %}
license = GNU General Public License v3 (GPLv3)
{%- elif cookiecutter.license == "CC BY-NC-SA 4.0 (non-commercial)" %}
license = CC BY-NC-SA 4.0
{%- elif cookiecutter.license == "Other (custom)" %}
# TODO @{{ cookiecutter.author_email }}: add license here
# license =
{%- endif %}
license_file = LICENSE
# TODO @{{ cookiecutter.author_email }}: add/update project classifiers here from https://pypi.org/classifiers/
classifiers =
    Intended Audience :: Science/Research
{%- if cookiecutter.license == "MIT" %}
    License :: OSI Approved :: MIT License
{%- elif cookiecutter.license == "BSD-3" %}
    License :: OSI Approved :: BSD License
{%- elif cookiecutter.license == "GNU GPL v3.0" %}
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
{%- elif cookiecutter.license == "CC BY-NC-SA 4.0 (non-commercial)" %}
    License :: Free for non-commercial use
{%- endif %}
    Natural Language :: English
    Operating System :: POSIX :: Linux
    Programming Language :: Python :: {{ cookiecutter.python_version }}
project_urls =
#    Documentation =
# TODO @{{ cookiecutter.author_email }}: source url is probably same as url
#    Source =
# TODO @{{ cookiecutter.author_email }}: add link to issues here
{%- if cookiecutter.git_host == "GitHub" %}
#    Tracker = https://github.com/[username or org]/{{ cookiecutter.__project_slug }}/issues
{%- elif cookiecutter.git_host == "GitLab" %}
#    Tracker = https://gitlab.com/[path]/{{ cookiecutter.__project_slug }}/-/issues
{%- endif %}

[options]
zip_safe = False
packages = find:
# TODO @{{ cookiecutter.author_email }}: update the platforms <https://packaging.python.org/en/latest/specifications/platform-compatibility-tags/>.
platforms =
    manylinux2014_x86_64
include_package_data = True
# TODO @{{ cookiecutter.author_email }}: add requirements here
# install_requires =
python_requires = >={{ cookiecutter.python_version }}

[options.extras_require]
tests =
    coverage
    flake8
    mypy
{%- if cookiecutter.use_pre_commit == "yes" %}
    pre-commit
{%- endif %}
    pycodestyle
    pytest >= 6.2.2
    pytest-cov
all =
    %(tests)s

[flake8]
max-line-length = {{ cookiecutter.max_line_length }}
max-complexity = 10
# E203: incorrectly triggers on array slices: <https://github.com/PyCQA/pycodestyle/issues/373>
# SIM300: Yoda conditions might be more reliable but not more readable
extend-ignore = E203, SIM300

[mypy]
python_version = {{ cookiecutter.python_version }}
ignore_missing_imports = True
# plugins = numpy.typing.mypy_plugin # TODO @{{ cookiecutter.author_email }}: activate if you are using numpy
