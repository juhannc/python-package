# Here are some commonly used pre-commit hooks. You can find more at:
# <https://github.com/pre-commit/pre-commit-hooks>
# TODO @{{ cookiecutter.author_email }}: Choose the pre commit hooks you want to use
repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.4.0
  hooks:
  - id: check-ast
  - id: check-builtin-literals
  - id: check-case-conflict
  - id: check-docstring-first
  - id: check-executables-have-shebangs
  - id: check-json
  - id: check-merge-conflict
  - id: check-shebang-scripts-are-executable
  - id: check-toml
  - id: check-yaml
  - id: debug-statements
  - id: end-of-file-fixer
  - id: trailing-whitespace
# The following hooks are deactivated by default because they can heavily change your code.
# However, some might find them useful for automatic formatting and sorting of imports.
# Activate them a your own discretion.
# TODO @{{ cookiecutter.author_email }}: Activate if required
# - repo: https://github.com/psf/black
#     rev: 23.7.0
#     hooks:
#     - id: black
# - repo: https://github.com/pycqa/isort
#     rev: 5.12.0
#     hooks:
#       - id: isort
#         args: ["--profile", "black"]
#         name: isort (python)
# - repo: https://github.com/codespell-project/codespell
#   rev: v2.2.5
#   hooks:
#   - id: codespell
#     name: Fixing common spelling mistakes
#     args:
#     - --write-changes
# - repo: https://github.com/igorshubovych/markdownlint-cli
#   rev: v0.35.0
#   hooks:
#   - id: markdownlint
#     name: Fixing markdown linting errors
#     args: [--disable, MD013, --fix]
# - repo: https://github.com/MarcoGorelli/absolufy-imports
#   rev: v0.3.1
#   hooks:
#   - id: absolufy-imports
#     name: Make python imports absolute
# - repo: https://github.com/asottile/pyupgrade
#   rev: v2.37.3
#   hooks:
#   - id: pyupgrade
#     name: Upgrade common mistakes
#     args: [--py38-plus]  # TODO @{{ cookiecutter.author_email }}: Change to minimum supported Python version
# - repo: https://github.com/PyCQA/flake8
#   rev: 5.0.4
#   hooks:
#   - id: flake8
#     name: Linting Python code (flake8)
#     additional_dependencies:
#     - flake8-bugbear
#     - flake8-builtins
#     - flake8-comprehensions
#     - flake8-simplify
#     - pep8-naming
# - repo: https://github.com/charliermarsh/ruff-pre-commit
#   rev: v0.0.286
#   hooks:
#   - id: ruff
#     name: Linting Python code (ruff)
#     args: [--fix, --exit-non-zero-on-fix]
# - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
#   rev: v2.10.0
#   hooks:
#   - id: pretty-format-yaml
#     args: [--autofix, --indent, '2']
#   - id: pretty-format-toml
#     args: [--autofix]
# - repo: https://github.com/pre-commit/mirrors-mypy
#   rev: v1.5.1
#   hooks:
#   - id: mypy
#     name: Static typechecking (mypy)
#     exclude: ^tests/
#     # additional_dependencies: [numpy>=1.23]  # TODO @{{ cookiecutter.author_email }}: add common dependencies in accordance with the setup.cfg file
# - repo: https://github.com/PyCQA/prospector
#   rev: 1.10.2
#   hooks:
#   - id: prospector
#     name: Analyzing Python code (prospector)
# - repo: https://github.com/PyCQA/bandit
#   rev: 1.7.5
#   hooks:
#   - id: bandit
#     name: Security linting (bandit)

