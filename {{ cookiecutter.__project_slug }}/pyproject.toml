# SPDX-FileCopyrightText: {{ cookiecutter.__year }} {{ cookiecutter.author_name }}
#
# SPDX-License-Identifier: {{ cookiecutter.license }}
[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 62.3.0", "wheel"]

[project]
classifiers = [
    "Intended Audience :: Science/Research",
{%- if cookiecutter.license == "MIT" %}
    "License :: OSI Approved :: MIT License",
{%- elif cookiecutter.license == "BSD-3-Clause" %}
    "License :: OSI Approved :: BSD License",
{%- elif cookiecutter.license == "GPL-3.0-or-later" %}
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
{%- elif cookiecutter.license == "CC-BY-NC-ND-4.0" or cookiecutter.license == "CC-BY-NC-ND-4.0" %}
    "License :: Free for non-commercial use",
{%- endif %}
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: {{ cookiecutter.python_version }}"
]# TODO @{{ cookiecutter.author_email }}: add/update project classifiers here from https://pypi.org/classifiers/authors = [description = @{{ cookiecutter.short_description }}
authors = [
  { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
# TODO @{{ cookiecutter.author_email }}: add dependencies here
dependencies = []
dynamic = ["version"]
license = { file = "LICENSES/{{ cookiecutter.license }}.txt" }
name = "{{ cookiecutter.package_slug }}"
requires-python = ">={{ cookiecutter.python_version }}"

[project.optional-dependencies]
all = [
  { include-group = "dev" },
  { include-group = "docs" },
  { include-group = "tests" },
]
dev = ["pre-commit>=3.5.0"]
docs = [
  "sphinx",
  "sphinx-autodoc-typehints",
  "sphinx-rtd-theme",
  "sphinx-autoapi",
]
tests = [
  "coverage",
  "flake8-bugbear",
  "flake8-builtins",
  "flake8-comprehensions",
  "flake8-docstrings-complete",
  "flake8-docstrings",
  "flake8-pyproject",
  "flake8-simplify",
  "flake8",
  "mypy",
  "pep8-naming",
  "pycodestyle",
  "pydoclint",
  "pytest-cov",
  "pytest>=7.4.0",
]

[project.readme]
content-type = "text/markdown; charset=UTF-8"
file = "README.md"

[project.urls]
# TODO @{{ cookiecutter.author_email }}: add URLs here
# Documentation =
# Homepage =
# Source =
# Tracker =

[tool.flake8]
check-return-types = true
# E203: incorrectly triggers on array slices: <https://github.com/PyCQA/pycodestyle/issues/373>
# SIM300: Yoda conditions might be more reliable but not more readable
# D107: Google docstring style prevents docstrings in __init__ function
# D401: Imperative mood is not always detectet correctly
# DCO010: Google docstring style prevents docstrings in __init__ function <https://github.com/jdkandersson/flake8-docstrings-complete/issues/15>
extend-ignore = "E203, SIM300, D107, D401, DCO010"
max-complexity = "10"
max-line-length = "88"
# **/__init__.py: Ignore docstring style for __init__.py files
# tests/*: Ignore docstring style for tests
per-file-ignores = ["**/__init__.py: D", "tests/*: D"]
style = "google"

[tool.mypy]
ignore_missing_imports = true
# plugins = ["numpy.typing.mypy_plugin"]  # TODO @{{ cookiecutter.author_email }}: activate if you are using numpy
python_version = "{{ cookiecutter.python_version }}"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSES/"]
# TODO @{{ cookiecutter.author_email }}: update the platforms <https://packaging.python.org/en/latest/specifications/platform-compatibility-tags/>.
platforms = ["manylinux2014_x86_64"]
zip-safe = false

[tool.licensecheck]
# ignore_packages = []
using = "PEP631"
zero = true

[tool.setuptools.dynamic]
version = { file = ["VERSION"] }

[tool.setuptools.packages]
find = { namespaces = false }
